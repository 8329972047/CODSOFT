import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import zipfile

# Extract dataset
zip_path = "/mnt/data/IMDb Movies India.csv.zip"
with zipfile.ZipFile(zip_path, 'r') as z:
    z.extractall("/mnt/data/")

# Load dataset
file_path = "/mnt/data/IMDb Movies India.csv"
df = pd.read_csv(file_path)

# Drop irrelevant columns
df.drop(columns=["Movie Name", "Release Year"], inplace=True)

# Handle missing values
df.fillna(df.median(), inplace=True)

# Encode categorical variables
label_encoders = {}
for col in ["Genre", "Director", "Actors"]:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col].astype(str))
    label_encoders[col] = le

# Define features and target variable
X = df.drop(columns=["Rating"])
y = df["Rating"]

# Normalize numerical features
scaler = StandardScaler()
X = scaler.fit_transform(X)

# Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse:.4f}")
